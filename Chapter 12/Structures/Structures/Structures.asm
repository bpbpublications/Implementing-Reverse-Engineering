; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	C:\JitenderN\REBook\Structures\Structures\Structures.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG5660	DB	'Jitender', 00H
	ORG $+3
$SG5662	DB	0aH, '%s %d %llu', 00H
$SG5663	DB	0aH, '%s %d %llu', 00H
CONST	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_main
EXTRN	_printf:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_user$ = -64						; size = 56
__$ArrayPad$ = -8					; size = 4
_puser$ = -4						; size = 4
_main	PROC
; File c:\jitendern\rebook\structures\structures\structures.cpp
; Line 9
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 18
	mov	eax, DWORD PTR $SG5660
	mov	DWORD PTR _user$[ebp], eax
	mov	ecx, DWORD PTR $SG5660+4
	mov	DWORD PTR _user$[ebp+4], ecx
	mov	dl, BYTE PTR $SG5660+8
	mov	BYTE PTR _user$[ebp+8], dl
	xor	eax, eax
	mov	DWORD PTR _user$[ebp+9], eax
	mov	DWORD PTR _user$[ebp+13], eax
	mov	DWORD PTR _user$[ebp+17], eax
	mov	DWORD PTR _user$[ebp+21], eax
	mov	DWORD PTR _user$[ebp+25], eax
	mov	DWORD PTR _user$[ebp+29], eax
	mov	DWORD PTR _user$[ebp+33], eax
	mov	WORD PTR _user$[ebp+37], ax
	mov	BYTE PTR _user$[ebp+39], al
	mov	DWORD PTR _user$[ebp+40], 30		; 0000001eH
	mov	DWORD PTR _user$[ebp+48], -691168947	; d6cd994dH
	mov	DWORD PTR _user$[ebp+52], 1
; Line 21
	lea	ecx, DWORD PTR _user$[ebp]
	mov	DWORD PTR _puser$[ebp], ecx
; Line 22
	mov	edx, DWORD PTR _user$[ebp+52]
	push	edx
	mov	eax, DWORD PTR _user$[ebp+48]
	push	eax
	mov	ecx, DWORD PTR _user$[ebp+40]
	push	ecx
	lea	edx, DWORD PTR _user$[ebp]
	push	edx
	push	OFFSET $SG5662
	call	_printf
	add	esp, 20					; 00000014H
; Line 23
	mov	eax, DWORD PTR _puser$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	push	ecx
	mov	edx, DWORD PTR [eax+48]
	push	edx
	mov	eax, DWORD PTR _puser$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	push	ecx
	mov	edx, DWORD PTR _puser$[ebp]
	push	edx
	push	OFFSET $SG5663
	call	_printf
	add	esp, 20					; 00000014H
; Line 25
	xor	eax, eax
; Line 26
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_main	ENDP
_TEXT	ENDS
END
