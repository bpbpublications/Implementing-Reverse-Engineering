; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	C:\JitenderN\REBook\strcpy\strcpy\strcpy.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG4688	DB	'ReverseEngg', 00H
$SG4690	DB	'%s', 0aH, 00H
CONST	ENDS
PUBLIC	?xstrcpy@@YAPADPADPBD@Z				; xstrcpy
; Function compile flags: /Ogtpy
_TEXT	SEGMENT
_dest$ = 8						; size = 4
_src$ = 12						; size = 4
?xstrcpy@@YAPADPADPBD@Z PROC				; xstrcpy
; File c:\jitendern\rebook\strcpy\strcpy\strcpy.cpp
; Line 11
	mov	ecx, DWORD PTR _dest$[esp-4]
	test	ecx, ecx
	jne	SHORT $LN3@xstrcpy
; Line 12
	xor	eax, eax
; Line 31
	ret	0
$LN3@xstrcpy:
	push	esi
; Line 19
	mov	esi, DWORD PTR _src$[esp]
	mov	dl, BYTE PTR [esi]
	mov	eax, ecx
	test	dl, dl
	je	SHORT $LN1@xstrcpy
	sub	esi, ecx
	npad	6
$LL2@xstrcpy:
; Line 21
	mov	BYTE PTR [ecx], dl
	mov	dl, BYTE PTR [esi+ecx+1]
; Line 22
	inc	ecx
	test	dl, dl
	jne	SHORT $LL2@xstrcpy
$LN1@xstrcpy:
; Line 27
	mov	BYTE PTR [ecx], 0
	pop	esi
; Line 31
	ret	0
?xstrcpy@@YAPADPADPBD@Z ENDP				; xstrcpy
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_main
EXTRN	_printf:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
; Function compile flags: /Ogtpy
_TEXT	SEGMENT
_src$ = -44						; size = 12
_dest$ = -32						; size = 25
__$ArrayPad$ = -4					; size = 4
_main	PROC
; Line 35
	sub	esp, 44					; 0000002cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+44], eax
; Line 36
	mov	eax, DWORD PTR $SG4688
	mov	edx, DWORD PTR $SG4688+8
	mov	ecx, DWORD PTR $SG4688+4
	mov	DWORD PTR _src$[esp+44], eax
	push	esi
	mov	DWORD PTR _src$[esp+56], edx
; Line 39
	lea	eax, DWORD PTR _dest$[esp+48]
	mov	esi, eax
	lea	edx, DWORD PTR _src$[esp+48]
	mov	DWORD PTR _src$[esp+52], ecx
	sub	edx, esi
	mov	cl, 82					; 00000052H
	pop	esi
	npad	6
$LL4@main:
	mov	BYTE PTR [eax], cl
	mov	cl, BYTE PTR [edx+eax+1]
	inc	eax
	test	cl, cl
	jne	SHORT $LL4@main
	mov	BYTE PTR [eax], cl
	lea	eax, DWORD PTR _dest$[esp+44]
	push	eax
	push	OFFSET $SG4690
	call	_printf
; Line 42
	mov	ecx, DWORD PTR __$ArrayPad$[esp+52]
	add	esp, 8
	xor	ecx, esp
	xor	eax, eax
	call	@__security_check_cookie@4
	add	esp, 44					; 0000002cH
	ret	0
_main	ENDP
_TEXT	ENDS
END
